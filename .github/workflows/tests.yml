name: "Ubuntu 'chiselled-jre' Tests"

on:
  pull_request:
  push:

env:
  image-name: ubuntu/chiselled-jre:test
  build-image-name: temurin-jdk8-builder:test

jobs:
  build:
    runs-on: ubuntu-22.04
    name: Build and Test
    strategy:
      fail-fast: false
      matrix:
        ubuntu-release: ["22.04"]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '8'

      - name: Tests Maven cache
        uses: actions/cache@v3
        with:
          path: ${{ runner.temp }}/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Tests PDFBox
        uses: actions/cache@v3
        with:
          path: tests/pdfbox/pdfbox-2.0.27
          key: tests-pdfbox-pdfbox-2.0.27
          restore-keys: |
            tests-pdfbox-pdfbox-2.0.27

      - name: Tests Petclinic
        uses: actions/cache@v3
        with:
          path: tests/petclinic-test/spring-petclinic
          key: tests-petclinic-test-spring-petclinic
          restore-keys: |
            tests-petclinic-test-spring-petclinic

      - name: Build the chiselled-jre image
        run: |
          docker build \
          -t ${{ env.image-name }} \
          --build-arg UID=$(id -u ${USER}) \
          --build-arg GID=$(id -g ${USER}) \
          -f chiselled-jre/Dockerfile.${{ matrix.ubuntu-release }} \
          chiselled-jre

      - name: Build the JDK docker image
        run: |
          docker build \
          -t ${{ env.build-image-name }} \
          --build-arg UID=$(id -u ${USER}) \
          --build-arg GID=$(id -g ${USER}) \
          -f tests/Dockerfile.${{ matrix.ubuntu-release }} \
          tests

      - name: Run Tests
        working-directory: ${{ github.workspace }}/tests/
        run: |
          ./run-all-tests ${{ env.image-name }} \
                          ${{ env.build-image-name }} \
                          ${{ runner.temp }}/.m2
  multi-arch-build:
    runs-on: ubuntu-22.04
    name: Multi Architecture Build
    strategy:
      fail-fast: false
      matrix:
        ubuntu-release: ["22.04"]
        arch: ["amd64", "arm64"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build the chiselled-jre image
        run: |
          docker buildx build \
          --tag=${{ env.image-name }} \
          --file=chiselled-jre/Dockerfile.${{ matrix.ubuntu-release }} \
          --platform=linux/${{ matrix.arch }} \
          chiselled-jre
